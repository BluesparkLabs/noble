<?php

/**
 * @file
 * Functions to support theming in the sheg theme.
 */
use Drupal\Component\Utility\Html;


/**
 * Implements hook_page_attachments_alter().
 */
//function starter_theme_page_attachments_alter(array &$page) {
//  // Tell IE to use latest rendering engine (not to use compatibility mode).
//  /*$ie_edge = [
//    '#type' => 'html_tag',
//    '#tag' => 'meta',
//    '#attributes' => [
//    'http-equiv' => 'X-UA-Compatible',
//    'content' => 'IE=edge',
//    ],
//  ];
//  $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
//}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
//function starter_theme_preprocess_page(array &$variables) {
//
//}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
//function starter_theme_theme_suggestions_page_alter(array &$suggestions, array $variables) {
//
//}

/**
 * Implements hook_theme_suggestions_block_alter().
 */
function starter_theme_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 2, 0, ['block__block_content__' . $variables['elements']['content']['#block_content']->bundle()]);
  }
}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
//function starter_theme_theme_suggestions_node_alter(array &$suggestions, array $variables) {
//  /*$node = $variables['elements']['#node'];
//
//  if ($variables['elements']['#view_mode'] == "full") {
//
//  }*/
//}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function starter_theme_preprocess_block(array &$variables) {

  // Create an HTML class based on the block ID
  $plausible_values = [
    $variables['elements']['#id'] ?? null,
    $variables['elements']['#plugin_id'] ?? null,
    $variables['elements']['#derivative_plugin_id'] ?? null,
    $variables['elements']['#base_plugin_id'] ?? null,
  ];

  $machine_name = Html::cleanCssIdentifier(current(array_filter($plausible_values)));

  if ($plausible_values[3] === 'local_tasks_block') {
    $machine_name = 'tabs';
  }
  $block_classes = array_merge([
    'block',
    'block--' . $machine_name,
  ],
    isset($variables['attributes']['class']) ? $variables['attributes']['class'] : []);
  unset($variables['attributes']['id']);
  $variables['attributes']['class'] = $block_classes;

  if (isset($variables['title_attributes'])) {
    $block_title_classes = array_merge([
      'block__title',
      'block__title--' . $machine_name,
    ],
      isset($variables['title_attributes']['class']) ? $variables['title_attributes']['class'] : []);
    $variables['title_attributes']['class'] = $block_title_classes;
  }


}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function starter_theme_preprocess_region(array &$variables) {
  drupal_set_message("message");
  $variables['attributes']['class'][] = 'l-' . Html::cleanCssIdentifier($variables['region']);
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function starter_theme_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  $suggestions[] = 'field__' . $element['#view_mode'];
  $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function starter_theme_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
    $suggestions[] = 'fieldset__form_composite';
  }*/
}

/**
 * Implements hook_preprocess_node().
 */
function starter_theme_preprocess_node(array &$variables) {
  // Default to turning off byline/submitted.
  //$variables['display_submitted'] = FALSE;
  $variables['attributes']['class'][] = $variables['node']->bundle();
  $variables['attributes']['class'][] = $variables['node']->bundle() . '--' . $variables['elements']['#view_mode'];
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function starter_theme_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_form().
 */
function starter_theme_preprocess_form(array &$variables) {
  //$variables['attributes']['novalidate'] = 'novalidate';
  $a = 0;
}

/**
 * Implements hook_preprocess_select().
 */
function starter_theme_preprocess_select(array &$variables) {
  //$variables['attributes']['class'][] = 'select-chosen';
}

/**
 * Implements hook_preprocess_field().
 */
function starter_theme_preprocess_field(array &$variables, $hook) {
  $a = 0;
  $variables['attributes']['class'] = Html::cleanCssIdentifier($variables['field_name']);
  /*switch ($variables['element']['#field_name']) {
  }*/
}

/**
 * Implements hook_preprocess_details().
 */
function starter_theme_preprocess_details(array &$variables) {
  /*$variables['attributes']['class'][] = 'details';
  $variables['summary_attributes']['class'] = 'summary';*/
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function starter_theme_theme_suggestions_details_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function starter_theme_preprocess_menu_local_task(array &$variables) {
//  $variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
}


function starter_theme_preprocess_views_mini_pager(array &$variables) {
  global $pager_total;
  $variables['pager_total'] = $pager_total[$variables['element'] ?: 0];
}
